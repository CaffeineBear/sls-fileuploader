service: sls-fileuploader

frameworkVersion: '2'


provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: ap-southeast-2
  environment:
    userTableName: ${self:custom.userTableName}
    s3bucketName: ${self:custom.s3bucketName}
    region: ap-southeast-2
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true

custom:
  userTableName: slsfileuploaderUsers
  s3bucketName: yong-family-storage
  familyStorageUserPool: arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: /
          method: get
  getUser: 
    handler: lambdas/users/getUser.handler
    events:
      - http:
          authorizer:
            arn:  arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv
          path: users/{ID}
          method: GET
          cors: true
  createUser: 
    handler: lambdas/users/createUser.handler
    events:
      - http:
          path: users/{ID}
          method: POST 
          cors: true
  getPresignedUrl:
    handler: lambdas/uploads/getPresignedUrl.handler
    events:
      - http:
          authorizer:
            arn:  arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv
          path: get-presigned-url/
          method: POST
          cors: true
  initializeUpload:
    handler: lambdas/uploads/initiateUpload.handler
    events:
      - http:
          method: POST
          path: initiate-upload/
          cors: true
          authorizer:
            arn:  arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv
  abortMultipartUpload:
    handler: lambdas/uploads/abortUpload.handler
    events:
      - http:
          method: POST
          path: abort-multi-upload/
          cors: true
          authorizer:
            arn:  arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv
  completeMultiUpload:
    handler: lambdas/uploads/completeMultiUpload.handler
    events:
      - http:
          method: POST
          path: complete-upload/
          cors: true
          authorizer:
            arn:  arn:aws:cognito-idp:ap-southeast-2:467075367265:userpool/ap-southeast-2_9adAj9ffv

resources:
  Resources:
    SlsFileUploaderUserTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:custom.userTableName}
        AttributeDefinitions: 
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
